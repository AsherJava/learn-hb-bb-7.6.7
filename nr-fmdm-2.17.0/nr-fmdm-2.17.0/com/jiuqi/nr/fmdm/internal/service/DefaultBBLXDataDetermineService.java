/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.jiuqi.nr.entity.model.IEntityAttribute
 *  com.jiuqi.nr.entity.model.IEntityModel
 *  com.jiuqi.nr.entity.service.IEntityMetaService
 *  com.jiuqi.nr.formtype.common.UnitNatureGetter
 *  com.jiuqi.nr.formtype.service.IFormTypeApplyService
 */
package com.jiuqi.nr.fmdm.internal.service;

import com.jiuqi.nr.entity.model.IEntityAttribute;
import com.jiuqi.nr.entity.model.IEntityModel;
import com.jiuqi.nr.entity.service.IEntityMetaService;
import com.jiuqi.nr.fmdm.service.IBBLXDataDetermineService;
import com.jiuqi.nr.formtype.common.UnitNatureGetter;
import com.jiuqi.nr.formtype.service.IFormTypeApplyService;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

@Service
public class DefaultBBLXDataDetermineService
implements IBBLXDataDetermineService {
    @Autowired
    private IEntityMetaService entityMetaService;
    @Autowired
    private IFormTypeApplyService iFormTypeApplyService;

    @Override
    public boolean needAutoGenerate(Map<String, Object> data, String entityId) {
        if (!this.iFormTypeApplyService.enableNrFormTypeMgr()) {
            return false;
        }
        String formTypeCode = this.iFormTypeApplyService.getEntityFormTypeCode(entityId);
        if (!StringUtils.hasLength(formTypeCode) || !this.iFormTypeApplyService.isFormType(formTypeCode)) {
            return false;
        }
        IEntityModel entityModel = this.entityMetaService.getEntityModel(entityId);
        IEntityAttribute bblxField = entityModel.getBblxField();
        if (null == bblxField) {
            return false;
        }
        IEntityAttribute codeField = entityModel.getBizKeyField();
        IEntityAttribute parentField = entityModel.getParentField();
        UnitNatureGetter unitNatureGetter = this.iFormTypeApplyService.getUnitNatureGetter(formTypeCode);
        return unitNatureGetter.isAutoGenUnitCode(data, codeField.getCode(), parentField.getCode(), bblxField.getCode());
    }

    @Override
    public List<Boolean> filterUnAutoGenerateData(List<Map<String, Object>> datas, String entityId) {
        ArrayList<Boolean> result = new ArrayList<Boolean>(datas.size());
        if (!this.iFormTypeApplyService.enableNrFormTypeMgr()) {
            return DefaultBBLXDataDetermineService.allFalse(result, datas.size());
        }
        String formTypeCode = this.iFormTypeApplyService.getEntityFormTypeCode(entityId);
        if (!StringUtils.hasLength(formTypeCode) || !this.iFormTypeApplyService.isFormType(formTypeCode)) {
            return DefaultBBLXDataDetermineService.allFalse(result, datas.size());
        }
        IEntityModel entityModel = this.entityMetaService.getEntityModel(entityId);
        IEntityAttribute bblxField = entityModel.getBblxField();
        if (null == bblxField) {
            return DefaultBBLXDataDetermineService.allFalse(result, datas.size());
        }
        IEntityAttribute codeField = entityModel.getBizKeyField();
        IEntityAttribute parentField = entityModel.getParentField();
        UnitNatureGetter unitNatureGetter = this.iFormTypeApplyService.getUnitNatureGetter(formTypeCode);
        for (Map<String, Object> data : datas) {
            result.add(unitNatureGetter.isAutoGenUnitCode(data, codeField.getCode(), parentField.getCode(), bblxField.getCode()));
        }
        return result;
    }

    public static List<Boolean> allFalse(List<Boolean> result, int size) {
        for (int i = 0; i < size; ++i) {
            result.add(Boolean.FALSE);
        }
        return result;
    }
}

